version: '3.8'

services:
  backend:
    build:
      context: ./product_manager_backend
    container_name: product_manager_backend
    volumes:
      - ./product_manager_backend:/app
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - db
      - redis
      - solr
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_URL: redis://redis:6379/1
      SOLR_URL: http://solr:8983/solr/mycore
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:${BACKEND_PORT}"
    networks:
      - product_manager_default

  frontend:
    build:
      context: ./product_manager_frontend
    container_name: product_manager_frontend
    volumes:
      - ./product_manager_frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      - product_manager_default

  db:
    image: mysql:8.0
    container_name: mysql-database
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
    networks:
      - product_manager_default

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - product_manager_default

  solr:
    image: solr:latest
    container_name: solr
    restart: always
    ports:
      - "8983:8983"
    command:
      - solr-precreate
      - mycore
    networks:
      - product_manager_default

  mysqld-exporter:
    image: quay.io/prometheus/mysqld-exporter
    container_name: mysqld-exporter
    restart: unless-stopped
    ports:
      - "9104:9104"
    command:
      - "--mysqld.username=exporter:exporterpassword"
      - "--mysqld.address=db:3306"
    networks:
      - product_manager_default

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - mysqld-exporter
    networks:
      - product_manager_default

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3030:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - product_manager_default

  k6:
    image: grafana/k6
    container_name: k6-load-tester
    volumes:
      - ./k6:/scripts
    depends_on:
      - backend
    networks:
      - product_manager_default
    entrypoint: [ "sh", "-c", "sleep infinity" ]

networks:
  product_manager_default:
    driver: bridge

volumes:
  mysql_data:
  grafana-data:
